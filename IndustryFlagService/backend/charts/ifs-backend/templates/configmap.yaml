#################################################################################
# Tractus-X - Industry Flag Service
#
# Copyright (c) 2025 CGI Deutschland B.V. & Co. KG
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the
# License for the specific language govern in permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#################################################################################

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-ifs-backend-config
  namespace: {{ .Values.namespace }}
data:
  logging.yml: |-
    version: 1
    disable_existing_loggers: False

    formatters:
      default:
        format: '%(asctime)s [%(levelname)-8s] [%(name)-15s] %(message)s'
        datefmt: '%Y-%m-%d %H:%M:%S'

    handlers:
      console:
        class : logging.StreamHandler
        formatter: default
        level   : DEBUG
        stream  : ext://sys.stdout
      file:
        class : logging.handlers.RotatingFileHandler
        formatter: default
        mode: a

    loggers:
        development:
            level: DEBUG
            handlers: [console, file]
            propagate: no

        staging:
            level: INFO
            handlers: [console, file]
            propagate: no

        production:
            level: WARNING
            handlers: [file]
            propagate: no

    root:
        level: INFO
        handlers: [console, file]
        
  configuration.yml: |-
    authorization:
      enabled: {{ .Values.authorization.enabled }}
      apiKey: 
        key: {{ .Values.authorization.apiKey.key }}
        value: {{ .Values.authorization.apiKey.value }}

    flags:
      {{- toYaml .Values.flags | nindent 12 }}

    startup:
      checks: {{ .Values.startup.checks }}
      refresh_interval: {{ .Values.startup.refresh_interval }}

    ifs:
      ## Refresh interval for the cache of applications
      refresh_interval: {{ .Values.ifs.refresh_interval }}
      ## DCT Type used to find the applications in the cache
      dct_type: {{ .Values.ifs.dct_type }}
      ## JSON array of policies that are allowed to be used
      policies: 
        {{- toYaml .Values.ifs.policies | nindent 12 }}
      

    edc:
      url: {{ .Values.edc.url }}
      apis:
        readiness: {{ .Values.edc.apis.readiness }}
        catalog: {{ .Values.edc.apis.catalog }}
        edr_prefix: {{ .Values.edc.apis.edr_prefix }}
        view_edr: {{ .Values.edc.apis.view_edr }}
        transfer_edr: {{ .Values.edc.apis.transfer_edr }}
        dsp: {{ .Values.edc.apis.dsp }}

      apiKey:
        key: {{ .Values.edc.apiKey.key }}
        value: {{ .Values.edc.apiKey.value }}

      participantId: {{ .Values.edc.participantId }}
      
      dct_type_key: {{ .Values.edc.dct_type_key | quote }}

      cache:
        expiration_time: {{ .Values.edc.cache.expiration_time }}

    discovery:
      url: {{ .Values.discovery.url }}
      keys:
        edc_discovery: {{ .Values.discovery.keys.edc_discovery }}

    catenax:
      centralidp:
        url: {{ .Values.catenax.centralidp.url }}
        realm: {{ .Values.catenax.centralidp.realm }}
        clientid: {{ .Values.catenax.centralidp.clientid }}
        clientsecret: {{ .Values.catenax.centralidp.clientsecret }}

